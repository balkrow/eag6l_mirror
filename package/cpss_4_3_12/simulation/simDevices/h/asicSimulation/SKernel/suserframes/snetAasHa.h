/*******************************************************************************
*              (c), Copyright 2001, Marvell International Ltd.                 *
* THIS CODE CONTAINS CONFIDENTIAL INFORMATION OF MARVELL SEMICONDUCTOR, INC.   *
* NO RIGHTS ARE GRANTED HEREIN UNDER ANY PATENT, MASK WORK RIGHT OR COPYRIGHT  *
* OF MARVELL OR ANY THIRD PARTY. MARVELL RESERVES THE RIGHT AT ITS SOLE        *
* DISCRETION TO REQUEST THAT THIS CODE BE IMMEDIATELY RETURNED TO MARVELL.     *
* THIS CODE IS PROVIDED "AS IS". MARVELL MAKES NO WARRANTIES, EXPRESSED,       *
* IMPLIED OR OTHERWISE, REGARDING ITS ACCURACY, COMPLETENESS OR PERFORMANCE.   *
********************************************************************************
*/
/**
********************************************************************************
* @file snetAasHa.h
*
* @brief API declaration and data type definition for HA
*
* @version   1
********************************************************************************
*/
#ifndef __snetAasHah
#define __snetAasHah

#include <asicSimulation/SKernel/smain/smain.h>

/**
 * @enum SIP7_HA_IPV4_VPORT_TUNNEL_START_TABLE_FIELDS_ENT
 *
 * @brief enumeration to hold fields of (HA) ipv4 vport tunnel start table
*/
typedef enum{
      SMEM_SIP7_HA_IPV4_VPORT_TUNNEL_START_TABLE_FIELDS_TUNNEL_TYPE_E
    , SMEM_SIP7_HA_IPV4_VPORT_TUNNEL_START_TABLE_FIELDS_TAG0_QOS_MARKING_MODE_E
    , SMEM_SIP7_HA_IPV4_VPORT_TUNNEL_START_TABLE_FIELDS_TAG1_QOS_MARKING_MODE_E
    , SMEM_SIP7_HA_IPV4_VPORT_TUNNEL_START_TABLE_FIELDS_UP0_E
    , SMEM_SIP7_HA_IPV4_VPORT_TUNNEL_START_TABLE_FIELDS_DEI0_E
    , SMEM_SIP7_HA_IPV4_VPORT_TUNNEL_START_TABLE_FIELDS_UP1_E
    , SMEM_SIP7_HA_IPV4_VPORT_TUNNEL_START_TABLE_FIELDS_DEI1_E
    , SMEM_SIP7_HA_IPV4_VPORT_TUNNEL_START_TABLE_FIELDS_TTL_E
    , SMEM_SIP7_HA_IPV4_VPORT_TUNNEL_START_TABLE_FIELDS_PROTOCOL_E
    , SMEM_SIP7_HA_IPV4_VPORT_TUNNEL_START_TABLE_FIELDS_DSCP_E
    , SMEM_SIP7_HA_IPV4_VPORT_TUNNEL_START_TABLE_FIELDS_DSCP_MARKING_MODE_E
    , SMEM_SIP7_HA_IPV4_VPORT_TUNNEL_START_TABLE_FIELDS_DF_FLAG_E
    , SMEM_SIP7_HA_IPV4_VPORT_TUNNEL_START_TABLE_FIELDS_AUTO_TUNNEL_OFFSET_E
    , SMEM_SIP7_HA_IPV4_VPORT_TUNNEL_START_TABLE_FIELDS_AUTO_TUNNEL_FLAG_E
    , SMEM_SIP7_HA_IPV4_VPORT_TUNNEL_START_TABLE_FIELDS_PROFILE_NUMBER_E
    , SMEM_SIP7_HA_IPV4_VPORT_TUNNEL_START_TABLE_FIELDS_UDP_SRC_PORT_E
    , SMEM_SIP7_HA_IPV4_VPORT_TUNNEL_START_TABLE_FIELDS_GRE_FLAGS_AND_VER_E
    , SMEM_SIP7_HA_IPV4_VPORT_TUNNEL_START_TABLE_FIELDS_DIP_E
    , SMEM_SIP7_HA_IPV4_VPORT_TUNNEL_START_TABLE_FIELDS_SIP_E
    , SMEM_SIP7_HA_IPV4_VPORT_TUNNEL_START_TABLE_FIELDS_ANALYZER_INDEX_E
    , SMEM_SIP7_HA_IPV4_VPORT_TUNNEL_START_TABLE_FIELDS_CNC_PTR_E
    , SMEM_SIP7_HA_IPV4_VPORT_TUNNEL_START_TABLE_FIELDS_FLOW_ID_GCF_ASSIGNMENT_PROFILE_E
    , SMEM_SIP7_HA_IPV4_VPORT_TUNNEL_START_TABLE_FIELDS_FLOW_ID_GCF_BITS_E
    , SMEM_SIP7_HA_IPV4_VPORT_TUNNEL_START_TABLE_FIELDS_RESERVED_E

    ,SMEM_SIP7_HA_IPV4_VPORT_TUNNEL_START_TABLE_FIELDS____LAST_VALUE___E/* used for array size */
}SMEM_SIP7_HA_IPV4_VPORT_TUNNEL_START_TABLE_FIELDS_ENT;

/* macro to set value to field of HA Ipv4 VPorts entry format in buffer */
#define SMEM_SIP7_HA_IPV4_VPORT_TUNNEL_START_ENTRY_FIELD_SET_MAC(_dev,_memPtr,_index,fieldName,_value)          \
    SNET_TABLE_ENTRY_FIELD_SET(_dev,_memPtr,_index,fieldName,_value,SKERNEL_TABLE_FORMAT_HA_IPV4_VPORT_TUNNEL_START_E)

/* macro to get field value of HA Ipv4 VPorts entry format in buffer */
#define SMEM_SIP7_HA_IPV4_VPORT_TUNNEL_START_ENTRY_FIELD_GET_MAC(_dev,_memPtr,_index,fieldName)                 \
    SNET_TABLE_ENTRY_FIELD_GET(_dev,_memPtr,_index,fieldName,SKERNEL_TABLE_FORMAT_HA_IPV4_VPORT_TUNNEL_START_E)


/**
 * @enum SIP7_HA_IPV6_VPORT_TUNNEL_START_TABLE_FIELDS_ENT
 *
 * @brief enumeration to hold fields of (HA) ipv6 vport tunnel start table
*/
typedef enum{
     SMEM_SIP7_HA_IPV6_VPORT_TUNNEL_START_TABLE_FIELDS_TUNNEL_TYPE_E
    ,SMEM_SIP7_HA_IPV6_VPORT_TUNNEL_START_TABLE_FIELDS_TAG0_QOS_MARKING_MODE_E
    ,SMEM_SIP7_HA_IPV6_VPORT_TUNNEL_START_TABLE_FIELDS_TAG1_QOS_MARKING_MODE_E
    ,SMEM_SIP7_HA_IPV6_VPORT_TUNNEL_START_TABLE_FIELDS_UP0_E
    ,SMEM_SIP7_HA_IPV6_VPORT_TUNNEL_START_TABLE_FIELDS_DEI0_E
    ,SMEM_SIP7_HA_IPV6_VPORT_TUNNEL_START_TABLE_FIELDS_UP1_E
    ,SMEM_SIP7_HA_IPV6_VPORT_TUNNEL_START_TABLE_FIELDS_DEI1_E
    ,SMEM_SIP7_HA_IPV6_VPORT_TUNNEL_START_TABLE_FIELDS_TTL_E
    ,SMEM_SIP7_HA_IPV6_VPORT_TUNNEL_START_TABLE_FIELDS_PROTOCOL_E
    ,SMEM_SIP7_HA_IPV6_VPORT_TUNNEL_START_TABLE_FIELDS_DSCP_E
    ,SMEM_SIP7_HA_IPV6_VPORT_TUNNEL_START_TABLE_FIELDS_DSCP_MARKING_MODE_E
    ,SMEM_SIP7_HA_IPV6_VPORT_TUNNEL_START_TABLE_FIELDS_DF_FLAG_E
    ,SMEM_SIP7_HA_IPV6_VPORT_TUNNEL_START_TABLE_FIELDS_AUTO_TUNNEL_OFFSET_E
    ,SMEM_SIP7_HA_IPV6_VPORT_TUNNEL_START_TABLE_FIELDS_AUTO_TUNNEL_FLAG_E
    ,SMEM_SIP7_HA_IPV6_VPORT_TUNNEL_START_TABLE_FIELDS_PROFILE_NUMBER_E
    ,SMEM_SIP7_HA_IPV6_VPORT_TUNNEL_START_TABLE_FIELDS_UDP_SRC_PORT_E
    ,SMEM_SIP7_HA_IPV6_VPORT_TUNNEL_START_TABLE_FIELDS_GRE_FLAGS_AND_VER_E
    ,SMEM_SIP7_HA_IPV6_VPORT_TUNNEL_START_TABLE_FIELDS_DIP_E
    ,SMEM_SIP7_HA_IPV6_VPORT_TUNNEL_START_TABLE_FIELDS_SIP_E
    ,SMEM_SIP7_HA_IPV6_VPORT_TUNNEL_START_TABLE_FIELDS_ANALYZER_INDEX_E
    ,SMEM_SIP7_HA_IPV6_VPORT_TUNNEL_START_TABLE_FIELDS_CNC_PTR_E
    ,SMEM_SIP7_HA_IPV6_VPORT_TUNNEL_START_TABLE_FIELDS_FLOW_ID_GCF_ASSIGNMENT_PROFILE_E
    ,SMEM_SIP7_HA_IPV6_VPORT_TUNNEL_START_TABLE_FIELDS_FLOW_ID_GCF_BITS_E
    ,SMEM_SIP7_HA_IPV6_VPORT_TUNNEL_START_TABLE_FIELDS_FLOW_LABEL_MODE_E
    ,SMEM_SIP7_HA_IPV6_VPORT_TUNNEL_START_TABLE_FIELDS_FLOW_LABEL_ENTROPY_MODE_E
    ,SMEM_SIP7_HA_IPV6_VPORT_TUNNEL_START_TABLE_FIELDS_FLOW_LABEL_VALUE_E

    ,SMEM_SIP7_HA_IPV6_VPORT_TUNNEL_START_TABLE_FIELDS____LAST_VALUE___E/* used for array size */
}SMEM_SIP7_HA_IPV6_VPORT_TUNNEL_START_TABLE_FIELDS_ENT;

/* macro to set value to field of HA Ipv6 VPorts entry format in buffer */
#define SMEM_SIP7_HA_IPV6_VPORT_TUNNEL_START_ENTRY_FIELD_SET_MAC(_dev,_memPtr,_index,fieldName,_value)          \
    SNET_TABLE_ENTRY_FIELD_SET(_dev,_memPtr,_index,fieldName,_value,SKERNEL_TABLE_FORMAT_HA_IPV6_VPORT_TUNNEL_START_E)

/* macro to get field value of HA Ipv6 VPorts entry format in buffer */
#define SMEM_SIP7_HA_IPV6_VPORT_TUNNEL_START_ENTRY_FIELD_GET_MAC(_dev,_memPtr,_index,fieldName)                 \
    SNET_TABLE_ENTRY_FIELD_GET(_dev,_memPtr,_index,fieldName,SKERNEL_TABLE_FORMAT_HA_IPV6_VPORT_TUNNEL_START_E)

/**
 * @enum SIP7_HA_MPLS_VPORT_TUNNEL_START_TABLE_FIELDS_ENT
 *
 * @brief enumeration to hold fields of (HA) MPLS vport tunnel start table
*/
typedef enum{
     SMEM_SIP7_HA_MPLS_VPORT_TUNNEL_START_TABLE_FIELDS_TUNNEL_TYPE_E
    ,SMEM_SIP7_HA_MPLS_VPORT_TUNNEL_START_TABLE_FIELDS_TAG0_QOS_MARKING_MODE_E
    ,SMEM_SIP7_HA_MPLS_VPORT_TUNNEL_START_TABLE_FIELDS_TAG1_QOS_MARKING_MODE_E
    ,SMEM_SIP7_HA_MPLS_VPORT_TUNNEL_START_TABLE_FIELDS_UP0_E
    ,SMEM_SIP7_HA_MPLS_VPORT_TUNNEL_START_TABLE_FIELDS_DEI0_E
    ,SMEM_SIP7_HA_MPLS_VPORT_TUNNEL_START_TABLE_FIELDS_UP1_E
    ,SMEM_SIP7_HA_MPLS_VPORT_TUNNEL_START_TABLE_FIELDS_DEI1_E
    ,SMEM_SIP7_HA_MPLS_VPORT_TUNNEL_START_TABLE_FIELDS_THREAD_ID_E
    ,SMEM_SIP7_HA_MPLS_VPORT_TUNNEL_START_TABLE_FIELDS_ANALYZER_INDEX_E
    ,SMEM_SIP7_HA_MPLS_VPORT_TUNNEL_START_TABLE_FIELDS_EGRESS_MIRRORING_MODE_E
    ,SMEM_SIP7_HA_MPLS_VPORT_TUNNEL_START_TABLE_FIELDS_ROW_LABELS_E
    ,SMEM_SIP7_HA_MPLS_VPORT_TUNNEL_START_TABLE_FIELDS_MPLS_ETHERTYPE_SELECT_E
    ,SMEM_SIP7_HA_MPLS_VPORT_TUNNEL_START_TABLE_FIELDS_CNC_PTR_E
    ,SMEM_SIP7_HA_MPLS_VPORT_TUNNEL_START_TABLE_FIELDS_FLOW_ID_GCF_PROFILE_ID_E
    ,SMEM_SIP7_HA_MPLS_VPORT_TUNNEL_START_TABLE_FIELDS_FLOW_ID_GCF_BITS_E
    ,SMEM_SIP7_HA_MPLS_VPORT_TUNNEL_START_TABLE_FIELDS_NUMBER_OF_LABELS_E
    ,SMEM_SIP7_HA_MPLS_VPORT_TUNNEL_START_TABLE_FIELDS_LAST_QOS_UNIFORM_LABEL_E
    ,SMEM_SIP7_HA_MPLS_VPORT_TUNNEL_START_TABLE_FIELDS_QOS_MAPPING_TABLE_INDEX_E
    ,SMEM_SIP7_HA_MPLS_VPORT_TUNNEL_START_TABLE_FIELDS_LAST_TTL_UNIFORM_LABEL_E
    ,SMEM_SIP7_HA_MPLS_VPORT_TUNNEL_START_TABLE_FIELDS_CW_INDEX_E
    ,SMEM_SIP7_HA_MPLS_VPORT_TUNNEL_START_TABLE_FIELDS_FLOW_LABEL_INSERTION_E

    ,SMEM_SIP7_HA_MPLS_VPORT_TUNNEL_START_TABLE_FIELDS____LAST_VALUE___E/* used for array size */
}SMEM_SIP7_HA_MPLS_VPORT_TUNNEL_START_TABLE_FIELDS_ENT;

/* macro to set value to field of HA MPLS VPorts entry format in buffer */
#define SMEM_SIP7_HA_MPLS_VPORT_TUNNEL_START_ENTRY_FIELD_SET_MAC(_dev,_memPtr,_index,fieldName,_value)          \
    SNET_TABLE_ENTRY_FIELD_SET(_dev,_memPtr,_index,fieldName,_value,SKERNEL_TABLE_FORMAT_HA_MPLS_VPORT_TUNNEL_START_E)

/* macro to get field value of HA MPLS VPorts entry format in buffer */
#define SMEM_SIP7_HA_MPLS_VPORT_TUNNEL_START_ENTRY_FIELD_GET_MAC(_dev,_memPtr,_index,fieldName)                 \
    SNET_TABLE_ENTRY_FIELD_GET(_dev,_memPtr,_index,fieldName,SKERNEL_TABLE_FORMAT_HA_MPLS_VPORT_TUNNEL_START_E)


/**
 * @enum SIP7_HA_SRC_EPORT_1_TABLE_FIELDS_ENT
 *
 * @brief enumeration to hold fields of (HA) Source ePort 1 table
*/
typedef enum{
     SMEM_SIP7_HA_SRC_EPORT_1_TABLE_FIELDS_MPLS_PW_LABEL_PUSH_ENABLE_E
    ,SMEM_SIP7_HA_SRC_EPORT_1_TABLE_FIELDS_SOURCE_BASED_MPLS_LABEL_E
    ,SMEM_SIP7_HA_SRC_EPORT_1_TABLE_FIELDS_SOURCE_BASED_MPLS_LABEL_EXP_E
    ,SMEM_SIP7_HA_SRC_EPORT_1_TABLE_FIELDS_SOURCE_BASED_MPLS_LABEL_TTL_E
    ,SMEM_SIP7_HA_SRC_EPORT_1_TABLE_FIELDS_ROUTER_MAC_SA_INDEX_E

    ,SMEM_SIP7_HA_SRC_EPORT_1_TABLE_FIELDS____LAST_VALUE___E/* used for array size */
}SMEM_SIP7_HA_SRC_EPORT_1_TABLE_FIELDS_ENT;

/* macro to get field value of HA Ingress ePort entry format in buffer */
#define SMEM_SIP7_HA_SRC_EPORT_1_ENTRY_FIELD_GET_MAC(_dev,_memPtr,_index,fieldName)                 \
    SNET_TABLE_ENTRY_FIELD_GET(_dev,_memPtr,_index,fieldName,SKERNEL_TABLE_FORMAT_HA_SRC_EPORT_1_E)

/**
 * @enum SIP7_HA_SRC_EPORT_2_TABLE_FIELDS_ENT
 *
 * @brief enumeration to hold fields of (HA) Source ePort 2 table
 */
typedef enum{
     SMEM_SIP7_HA_SRC_EPORT_2_TABLE_FIELDS_PUSHED_TAG_VLAN_ID_VLAUE_E
    ,SMEM_SIP7_HA_SRC_EPORT_2_TABLE_FIELDS_FORCE_E_TAG_IE_PID_TO_DEFAULT_E

    ,SMEM_SIP7_HA_SRC_EPORT_2_TABLE_FIELDS____LAST_VALUE___E/* used for array size */
}SMEM_SIP7_HA_SRC_EPORT_2_TABLE_FIELDS_ENT;

/* macro to set value to field of HA Ingress ePort entry format in buffer */
#define SMEM_SIP7_HA_SRC_EPORT_2_ENTRY_FIELD_SET_MAC(_dev,_memPtr,_index,fieldName,_value)          \
    SNET_TABLE_ENTRY_FIELD_SET(_dev,_memPtr,_index,fieldName,_value,SKERNEL_TABLE_FORMAT_HA_SRC_EPORT_2_E)

/* macro to get field value of HA Ingress ePort entry format in buffer */
#define SMEM_SIP7_HA_SRC_EPORT_2_ENTRY_FIELD_GET_MAC(_dev,_memPtr,_index,fieldName)                 \
    SNET_TABLE_ENTRY_FIELD_GET(_dev,_memPtr,_index,fieldName,SKERNEL_TABLE_FORMAT_HA_SRC_EPORT_2_E)

/**
 * @enum SIP7_HA_SRC_PHYSICAL_PORT_2_TABLE_FIELDS_ENT
 *
 * @brief enumeration to hold fields of (HA) Source physical port 2 table
 */
typedef enum{
     SMEM_SIP7_HA_SRC_PHYSICAL_PORT_2_TABLE_FIELDS_INVALID_CRC_MODE_E
    ,SMEM_SIP7_HA_SRC_PHYSICAL_PORT_2_TABLE_FIELDS_PORT_TIMESTAMP_RECEPTION_EN_E
    ,SMEM_SIP7_HA_SRC_PHYSICAL_PORT_2_TABLE_FIELDS_TRUNK_ID_E
    ,SMEM_SIP7_HA_SRC_PHYSICAL_PORT_2_TABLE_FIELDS_HSR_BASE_LSDU_OFFSET_E

    ,SMEM_SIP7_HA_SRC_PHYSICAL_PORT_2_TABLE_FIELDS____LAST_VALUE___E/* used for array size */
}SMEM_SIP7_HA_SRC_PHYSICAL_PORT_2_TABLE_FIELDS_ENT;

/* macro to shorten the calling code of (HA) source physical port table 2 fields - for GET field
    by indexing of 'srcPort'
*/
#define SMEM_SIP7_HA_SRC_PHYSICAL_PORT_2_ENTRY_FIELD_GET(_devObjPtr,srcPort,fieldName) \
    SNET_TABLE_ENTRY_FIELD_GET(_devObjPtr,                                             \
        smemMemGet(_devObjPtr,SMEM_SIP7_HA_INGRESS_PHYSICAL_PORT_2_ATTRIBUTES_TBL_MEM(_devObjPtr, srcPort)),\
        srcPort/* the physical port */,fieldName,SKERNEL_TABLE_FORMAT_HA_SRC_PHYSICAL_PORT_2_E)


/**
 * @enum SIP7_HA_TARGET_CIRCUITS_TABLE_FIELDS_ENT
 *
 * @brief enumeration to hold fields of (HA) Target circuits table
 */
typedef enum{
     SMEM_SIP7_HA_TARGET_CIRCUITS_TABLE_FIELDS_MODE_E
    ,SMEM_SIP7_HA_TARGET_CIRCUITS_TABLE_FIELDS_TAG0_TPID_INDEX_E
    ,SMEM_SIP7_HA_TARGET_CIRCUITS_TABLE_FIELDS_TAG1_TPID_INDEX_E
    ,SMEM_SIP7_HA_TARGET_CIRCUITS_TABLE_FIELDS_TAG0_VLAN_E
    ,SMEM_SIP7_HA_TARGET_CIRCUITS_TABLE_FIELDS_TAG1_VLAN_E
    ,SMEM_SIP7_HA_TARGET_CIRCUITS_TABLE_FIELDS_TAG0_UP_E
    ,SMEM_SIP7_HA_TARGET_CIRCUITS_TABLE_FIELDS_TAG0_DEI_E
    ,SMEM_SIP7_HA_TARGET_CIRCUITS_TABLE_FIELDS_TAG1_UP_E
    ,SMEM_SIP7_HA_TARGET_CIRCUITS_TABLE_FIELDS_TAG1_DEI_E
    ,SMEM_SIP7_HA_TARGET_CIRCUITS_TABLE_FIELDS_DSCP_E
    ,SMEM_SIP7_HA_TARGET_CIRCUITS_TABLE_FIELDS_QOS_MAPPING_TABLE_INDEX_E
    ,SMEM_SIP7_HA_TARGET_CIRCUITS_TABLE_FIELDS_L2_HEADER_UP0_DEI0_QOS_MARKING_MODE_E
    ,SMEM_SIP7_HA_TARGET_CIRCUITS_TABLE_FIELDS_L2_HEADER_UP1_DEI1_QOS_MARKING_MODE_E
    ,SMEM_SIP7_HA_TARGET_CIRCUITS_TABLE_FIELDS_DSCP_MARKING_MODE_E
    ,SMEM_SIP7_HA_TARGET_CIRCUITS_TABLE_FIELDS_MAC_SA_INDEX_E
    ,SMEM_SIP7_HA_TARGET_CIRCUITS_TABLE_FIELDS_MESH_ID_E
    ,SMEM_SIP7_HA_TARGET_CIRCUITS_TABLE_FIELDS_MTU_PROFILE_E
    ,SMEM_SIP7_HA_TARGET_CIRCUITS_TABLE_FIELDS_ANALYZER_INDEX_E
    ,SMEM_SIP7_HA_TARGET_CIRCUITS_TABLE_FIELDS_EGRESS_MIRRORING_MODE_E
    ,SMEM_SIP7_HA_TARGET_CIRCUITS_TABLE_FIELDS_MAC_DA_E
    ,SMEM_SIP7_HA_TARGET_CIRCUITS_TABLE_FIELDS_ASSIGN_MAC_DA_E
    ,SMEM_SIP7_HA_TARGET_CIRCUITS_TABLE_FIELDS_CNC_PTR_E
    ,SMEM_SIP7_HA_TARGET_CIRCUITS_TABLE_FIELDS_GCF_PROFILE_ID_E
    ,SMEM_SIP7_HA_TARGET_CIRCUITS_TABLE_FIELDS_FLOW_ID_GCF_BITS_E

    ,SMEM_SIP7_HA_TARGET_CIRCUITS_TABLE_FIELDS____LAST_VALUE___E/* used for array size */
}SMEM_SIP7_HA_TARGET_CIRCUITS_TABLE_FIELDS_ENT;

/* macro to set value to field of HA Ingress ePort entry format in buffer */
#define SMEM_SIP7_HA_TARGET_CIRCUITS_ENTRY_FIELD_SET_MAC(_dev,_memPtr,_index,fieldName,_value)          \
    SNET_TABLE_ENTRY_FIELD_SET(_dev,_memPtr,_index,fieldName,_value,SKERNEL_TABLE_FORMAT_HA_TARGET_CIRCUITS_E)

/* macro to get field value of HA Ingress ePort entry format in buffer */
#define SMEM_SIP7_HA_TARGET_CIRCUITS_ENTRY_FIELD_GET_MAC(_dev,_memPtr,_index,fieldName)                 \
    SNET_TABLE_ENTRY_FIELD_GET(_dev,_memPtr,_index,fieldName,SKERNEL_TABLE_FORMAT_HA_TARGET_CIRCUITS_E)

/**
 * @enum SIP7_HA_ANALYZERS_TARGET_CIRCUITS_TABLE_FIELDS_ENT
 *
 * @brief enumeration to hold fields of (HA) Analyzers target circuits table
 */
typedef enum{
    SMEM_SIP7_HA_ANALYZERS_TARGET_CIRCUITS_TABLE_FIELDS_MODE_E
   ,SMEM_SIP7_HA_ANALYZERS_TARGET_CIRCUITS_TABLE_FIELDS_TAG0_TPID_INDEX_E
   ,SMEM_SIP7_HA_ANALYZERS_TARGET_CIRCUITS_TABLE_FIELDS_TAG1_TPID_INDEX_E
   ,SMEM_SIP7_HA_ANALYZERS_TARGET_CIRCUITS_TABLE_FIELDS_TAG0_VLAN_E
   ,SMEM_SIP7_HA_ANALYZERS_TARGET_CIRCUITS_TABLE_FIELDS_TAG1_VLAN_E
   ,SMEM_SIP7_HA_ANALYZERS_TARGET_CIRCUITS_TABLE_FIELDS_TAG0_UP_E
   ,SMEM_SIP7_HA_ANALYZERS_TARGET_CIRCUITS_TABLE_FIELDS_TAG0_DEI_E
   ,SMEM_SIP7_HA_ANALYZERS_TARGET_CIRCUITS_TABLE_FIELDS_TAG1_UP_E
   ,SMEM_SIP7_HA_ANALYZERS_TARGET_CIRCUITS_TABLE_FIELDS_TAG1_DEI_E
   ,SMEM_SIP7_HA_ANALYZERS_TARGET_CIRCUITS_TABLE_FIELDS_MTU_PROFILE_E

   ,SMEM_SIP7_HA_ANALYZERS_TARGET_CIRCUITS_TABLE_FIELDS____LAST_VALUE___E/* used for array size */
}SMEM_SIP7_HA_ANALYZERS_TARGET_CIRCUITS_TABLE_FIELDS_ENT;

/* macro to set value to field of HA Ingress ePort entry format in buffer */
#define SMEM_SIP7_HA_ANALYZERS_TARGET_CIRCUITS_ENTRY_FIELD_SET_MAC(_dev,_memPtr,_index,fieldName,_value)          \
    SNET_TABLE_ENTRY_FIELD_SET(_dev,_memPtr,_index,fieldName,_value,SKERNEL_TABLE_FORMAT_HA_ANALYZERS_TARGET_CIRCUITS_E)

/* macro to get field value of HA Ingress ePort entry format in buffer */
#define SMEM_SIP7_HA_ANALYZERS_TARGET_CIRCUITS_ENTRY_FIELD_GET_MAC(_dev,_memPtr,_index,fieldName)                 \
    SNET_TABLE_ENTRY_FIELD_GET(_dev,_memPtr,_index,fieldName,SKERNEL_TABLE_FORMAT_HA_ANALYZERS_TARGET_CIRCUITS_E)

/**
 * @enum SIP7_HA_QUEUE_MAPPING_TABLE_FIELDS_ENT
 *
 * @brief enumeration to hold fields of (HA) Queue mapping table
 */
typedef enum{
    SMEM_SIP7_HA_QUEUE_MAPPING_TABLE_FIELDS_TAIL_DROP_PROFILE_E

    ,SMEM_SIP7_HA_QUEUE_MAPPING_TABLE_FIELDS____LAST_VALUE___E/* used for array size */
}SMEM_SIP7_HA_QUEUE_MAPPING_TABLE_FIELDS_ENT;

/* macro to set value to field of HA Ingress ePort entry format in buffer */
#define SMEM_SIP7_HA_QUEUE_MAPPING_ENTRY_FIELD_SET_MAC(_dev,_memPtr,_index,fieldName,_value)          \
    SNET_TABLE_ENTRY_FIELD_SET(_dev,_memPtr,_index,fieldName,_value,SKERNEL_TABLE_FORMAT_HA_QUEUE_MAPPING_E)

/* macro to get field value of HA Ingress ePort entry format in buffer */
#define SMEM_SIP7_HA_QUEUE_MAPPING_ENTRY_FIELD_GET_MAC(_dev,_memPtr,_index,fieldName)                 \
    SNET_TABLE_ENTRY_FIELD_GET(_dev,_memPtr,_index,fieldName,SKERNEL_TABLE_FORMAT_HA_QUEUE_MAPPING_E)

/**
 * @enum SIP7_HA_QOS_MAPPING_TABLE_FIELDS_ENT
 *
 * @brief enumeration to hold fields of (HA) QoS mapping table
 */
typedef enum{
     SMEM_SIP7_HA_QOS_MAPPING_TABLE_FIELDS_TAG0_UP0_E
    ,SMEM_SIP7_HA_QOS_MAPPING_TABLE_FIELDS_TAG0_DEI0_E
    ,SMEM_SIP7_HA_QOS_MAPPING_TABLE_FIELDS_TAG1_UP0_E
    ,SMEM_SIP7_HA_QOS_MAPPING_TABLE_FIELDS_TAG1_DEI0_E
    ,SMEM_SIP7_HA_QOS_MAPPING_TABLE_FIELDS_DSCP0_E
    ,SMEM_SIP7_HA_QOS_MAPPING_TABLE_FIELDS_EXP0_E
    ,SMEM_SIP7_HA_QOS_MAPPING_TABLE_FIELDS_TAG0_UP1_E
    ,SMEM_SIP7_HA_QOS_MAPPING_TABLE_FIELDS_TAG0_DEI1_E
    ,SMEM_SIP7_HA_QOS_MAPPING_TABLE_FIELDS_TAG1_UP1_E
    ,SMEM_SIP7_HA_QOS_MAPPING_TABLE_FIELDS_TAG1_DEI1_E
    ,SMEM_SIP7_HA_QOS_MAPPING_TABLE_FIELDS_DSCP1_E
    ,SMEM_SIP7_HA_QOS_MAPPING_TABLE_FIELDS_EXP1_E
    ,SMEM_SIP7_HA_QOS_MAPPING_TABLE_FIELDS_TAG0_UP2_E
    ,SMEM_SIP7_HA_QOS_MAPPING_TABLE_FIELDS_TAG0_DEI2_E
    ,SMEM_SIP7_HA_QOS_MAPPING_TABLE_FIELDS_TAG1_UP2_E
    ,SMEM_SIP7_HA_QOS_MAPPING_TABLE_FIELDS_TAG2_DEI2_E
    ,SMEM_SIP7_HA_QOS_MAPPING_TABLE_FIELDS_DSCP2_E
    ,SMEM_SIP7_HA_QOS_MAPPING_TABLE_FIELDS_EXP2_E
    ,SMEM_SIP7_HA_QOS_MAPPING_TABLE_FIELDS_TAG0_UP3_E
    ,SMEM_SIP7_HA_QOS_MAPPING_TABLE_FIELDS_TAG0_DEI3_E
    ,SMEM_SIP7_HA_QOS_MAPPING_TABLE_FIELDS_TAG1_UP3_E
    ,SMEM_SIP7_HA_QOS_MAPPING_TABLE_FIELDS_TAG1_DEI3_E
    ,SMEM_SIP7_HA_QOS_MAPPING_TABLE_FIELDS_DSCP3_E
    ,SMEM_SIP7_HA_QOS_MAPPING_TABLE_FIELDS_EXP3_E

    ,SMEM_SIP7_HA_QOS_MAPPING_TABLE_FIELDS____LAST_VALUE___E/* used for array size */
}SMEM_SIP7_HA_QOS_MAPPING_TABLE_FIELDS_ENT;

/* macro to set value to field of HA Ingress ePort entry format in buffer */
#define SMEM_SIP7_HA_QOS_MAPPING_ENTRY_FIELD_SET_MAC(_dev,_memPtr,_index,fieldName,_value)          \
    SNET_TABLE_ENTRY_FIELD_SET(_dev,_memPtr,_index,fieldName,_value,SKERNEL_TABLE_FORMAT_HA_QOS_MAPPING_E)

/* macro to get field value of HA Ingress ePort entry format in buffer */
#define SMEM_SIP7_HA_QOS_MAPPING_ENTRY_FIELD_GET_MAC(_dev,_memPtr,_index,fieldName)                 \
    SNET_TABLE_ENTRY_FIELD_GET(_dev,_memPtr,_index,fieldName,SKERNEL_TABLE_FORMAT_HA_QOS_MAPPING_E)

/**
 * @enum SIP7_HA_HEADER_FIELDS_TABLE_FIELDS_ENT
 *
 * @brief enumeration to hold fields of (HA) Header fields 0 table
 */
typedef enum{
     SMEM_SIP7_HA_HEADER_FIELDS_ENTRY_TYPE_E
    ,SMEM_SIP7_HA_HEADER_FIELDS_SUB_TYPE_E
    ,SMEM_SIP7_HA_HEADER_FIELDS_ANALYZER_INDEX_E
    ,SMEM_SIP7_HA_HEADER_FIELDS_EGRESS_MIRROR_MODE_E
    ,SMEM_SIP7_HA_HEADER_FIELDS_SUB_THREAD_ID_E
    ,SMEM_SIP7_HA_HEADER_FIELDS_CNC_PTR_E
    ,SMEM_SIP7_HA_HEADER_FIELDS_GCF_PROFILE_ID_E
    ,SMEM_SIP7_HA_HEADER_FIELDS_GCF_BITS_0_4_E
    ,SMEM_SIP7_HA_HEADER_FIELDS_NUMBER_OF_LABELS_E
    ,SMEM_SIP7_HA_HEADER_FIELDS_LAST_QOS_UNIFORM_LABEL_E
    ,SMEM_SIP7_HA_HEADER_FIELDS_GLOBAL_EXP_MAPPING_TBL_INDEX_E
    ,SMEM_SIP7_HA_HEADER_FIELDS_LAST_TTL_UNIFORM_LABEL_E
    ,SMEM_SIP7_HA_HEADER_FIELDS_CW_INDEX_E
    ,SMEM_SIP7_HA_HEADER_FIELDS_FLOW_LABEL_INSERTION_E
    ,SMEM_SIP7_HA_HEADER_FIELDS_GCF_BITS_5_47_E
    ,SMEM_SIP7_HA_HEADER_FIELDS_FLOW_ID_E
    ,SMEM_SIP7_HA_HEADER_FIELDS_MPLS_LABELS_E

    ,SMEM_SIP7_HA_HEADER_FIELDS_TABLE_FIELDS____LAST_VALUE___E/* used for array size */
}SMEM_SIP7_HA_HEADER_FIELDS_TABLE_FIELDS_ENT;

/* macro to set value to field of HA Ingress ePort entry format in buffer */
#define SMEM_SIP7_HA_HEADER_FIELDS_ENTRY_FIELD_SET_MAC(_dev,_memPtr,_index,fieldName,_value)          \
    SNET_TABLE_ENTRY_FIELD_SET(_dev,_memPtr,_index,fieldName,_value,SKERNEL_TABLE_FORMAT_HA_HEADER_FIELDS_E)

/* macro to get field value of HA Ingress ePort entry format in buffer */
#define SMEM_SIP7_HA_HEADER_FIELDS_ENTRY_FIELD_GET_MAC(_dev,_memPtr,_index,fieldName)                 \
    SNET_TABLE_ENTRY_FIELD_GET(_dev,_memPtr,_index,fieldName,SKERNEL_TABLE_FORMAT_HA_HEADER_FIELDS_E)

typedef enum{
    SMEM_SIP7_HA_HFT_TABLE_0_E,
    SMEM_SIP7_HA_HFT_TABLE_1_E
}SMEM_SIP7_HA_HFT_TABLE_TYPE_ENT;


typedef enum{
    SKERNEL_FRAME_HFT_TYPE_GENERIC_E,            /* Generic */
    SKERNEL_FRAME_HFT_TYPE_GENERIC_EXT_E,        /* Generic Extended */
    SKERNEL_FRAME_HFT_TYPE_MPLS_LABEL_E,         /* MPLS Label*/
    SKERNEL_FRAME_HFT_TYPE_MPLS_LABEL_EXT_E = 3, /* MPLS Label Extended */
}SKERNEL_FRAME_HFT_TYPE_ENT;

/**
* @internal snetAasHaTablesFormatInit function
* @endinternal
*
* @brief   init the format of HA tables.
*
* @param[in] devObjPtr                - pointer to device object.
*/
void snetAasHaTablesFormatInit(
    IN SKERNEL_DEVICE_OBJECT            * devObjPtr
);


#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */



#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif  /* __snetAasHah */



