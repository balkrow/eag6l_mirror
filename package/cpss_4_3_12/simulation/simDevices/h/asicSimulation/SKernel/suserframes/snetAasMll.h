/*******************************************************************************
*              (c), Copyright 2001, Marvell International Ltd.                 *
* THIS CODE CONTAINS CONFIDENTIAL INFORMATION OF MARVELL SEMICONDUCTOR, INC.   *
* NO RIGHTS ARE GRANTED HEREIN UNDER ANY PATENT, MASK WORK RIGHT OR COPYRIGHT  *
* OF MARVELL OR ANY THIRD PARTY. MARVELL RESERVES THE RIGHT AT ITS SOLE        *
* DISCRETION TO REQUEST THAT THIS CODE BE IMMEDIATELY RETURNED TO MARVELL.     *
* THIS CODE IS PROVIDED "AS IS". MARVELL MAKES NO WARRANTIES, EXPRESSED,       *
* IMPLIED OR OTHERWISE, REGARDING ITS ACCURACY, COMPLETENESS OR PERFORMANCE.   *
********************************************************************************
*/
/**
********************************************************************************
* @file snetAasMll.h
*
* @brief API declaration and data type definition for MLL
*
* @version   1
********************************************************************************
*/
#ifndef __snetAasMllh
#define __snetAasMllh

#include <asicSimulation/SKernel/smain/smain.h>


/* the fields of the (MLL) IP MLL BIER entry format in Sip7 */
typedef enum {

     SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_LAST_0
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_START_OF_TUNNEL_0
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_MLL_RPF_FAIL_CMD_0
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_MLL_EVID_0
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_USE_VIDX_0
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_TARGET_IS_TRUNK_0
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_USE_VPORT_0
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_EVIDX_0
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_TRG_EPORT_0
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_TRG_TRUNK_ID_0
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_VPORT_0
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_DISABLE_MAC_SA_MODIFICATION_0
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_RESERVED_0
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_TRG_DEV_0
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_EXCLUDE_SRC_VLAN_0
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_TTL_THRESHOLD_0_OR_HOP_LIMIT_THRESHOLD_0
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_TUNNEL_PTR_0
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_TUNNEL_TYPE_0
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_LAST_1
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_START_OF_TUNNEL_1
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_MLL_RPF_FAIL_CMD_1
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_MLL_EVID_1
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_USE_VIDX_1
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_TARGET_IS_TRUNK_1
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_USE_VPORT_1
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_EVIDX_1
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_TRG_EPORT_1
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_TRG_TRUNK_ID_1
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_VPORT_1
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_DISABLE_MAC_SA_MODIFICATION_1
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_RESERVED_1
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_TRG_DEV_1
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_EXCLUDE_SRC_VLAN_1
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_TTL_THRESHOLD_1_OR_HOP_LIMIT_THRESHOLD_1
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_TUNNEL_PTR_1
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_TUNNEL_TYPE_1
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_NEXT_MLL_PTR
    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_RESERVED_2

    ,SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS___LAST_VALUE___E/* used for array size */
}SMEM_SIP7_IP_MLL_BIER_TABLE_FIELDS_ENT;

/* the fields of the (MLL) L2MLL BIER entry format in Sip7 */
typedef enum {
  SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_LAST_0
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_BIND_TO_MLL_COUNTER_0
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_MASK_BITMAP_0
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_E_TREE_LEAF_0
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_BIER_MASK_PACKET_BIT_STRING_0
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_RESERVED_0
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_USE_VIDX_0
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_TARGET_IS_TRUNK_0
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_USE_VPORT_0
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_TRG_EPORT_0
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_TRG_TRUNK_ID_0
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_VIDX_0
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_VPORT_0
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_UNKNOWN_UC_FILTER_ENABLE_0
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_UNREGISTERED_MC_FILTER_ENABLE_0
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_BC_FILTER_ENABLE_0
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_TRG_DEV_0
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_ONE_PLUS_ONE_FILTERING_ENABLE_0
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_TTL_THRESHOLD_0
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_MESH_ID_0
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_MC_LOCAL_SWITCHING_ENABLE_0
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_MAX_HOP_COUNT_ENABLE_0
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_MAX_OUTGOING_HOP_COUNT_0
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_RESERVED_1

 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_LAST_1
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_BIND_TO_MLL_COUNTER_1
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_MASK_BITMAP_1
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_E_TREE_LEAF_1
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_BIER_MASK_PACKET_BIT_STRING_1
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_RESERVED_2
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_USE_VIDX_1
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_TARGET_IS_TRUNK_1
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_USE_VPORT_1
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_TRG_EPORT_1
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_TRG_TRUNK_ID_1
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_VIDX_1
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_VPORT_1
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_UNKNOWN_UC_FILTER_ENABLE_1
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_UNREGISTERED_MC_FILTER_ENABLE_1
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_BC_FILTER_ENABLE_1
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_TRG_DEV_1
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_ONE_PLUS_ONE_FILTERING_ENABLE_1
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_TTL_THRESHOLD_1
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_MESH_ID_1
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_MC_LOCAL_SWITCHING_ENABLE_1
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_MAX_HOP_COUNT_ENABLE_1
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_MAX_OUTGOING_HOP_COUNT_1
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_RESERVED_3

 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_ENTRY_SELECTOR
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_L2_NEXT_MLL_PTR

 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_BIER_F_BM_ENTRY_0
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_BIER_F_BM_ENTRY_1
 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_RESERVED_4

 ,SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS___LAST_VALUE___E/* used for array size */
}SMEM_SIP7_L2_MLL_BIER_TABLE_FIELDS_ENT;

/* macro to set value to field of (MLL) 'L2_MLL BIER' format */
#define SMEM_SIP7_L2_MLL_BIER_ENTRY_FIELD_SET(_devObjPtr,_memPtr,_index,fieldName,_value)       \
    SNET_TABLE_ENTRY_FIELD_SET(_devObjPtr,_memPtr,_index,fieldName,_value, SKERNEL_TABLE_FORMAT_L2_MLL_BIER_E)

/* macro to shorten the calling code of (MLL) 'L2_MLL BIER' fields - for GET field */
#define SMEM_SIP7_L2_MLL_BIER_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName)       \
    SNET_TABLE_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName,SKERNEL_TABLE_FORMAT_L2_MLL_BIER_E)

/* macro to set value to field of (MLL) 'IP_MLL BIER' format */
#define SMEM_SIP7_IP_MLL_BIER_ENTRY_FIELD_SET(_devObjPtr,_memPtr,_index,fieldName,_value)       \
    SNET_TABLE_ENTRY_FIELD_SET(_devObjPtr,_memPtr,_index,fieldName,_value, SKERNEL_TABLE_FORMAT_IP_MLL_BIER_E)

/* macro to shorten the calling code of (MLL) 'IP_MLL BIER' fields - for GET field */
#define SMEM_SIP7_IP_MLL_BIER_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName)       \
    SNET_TABLE_ENTRY_FIELD_GET(_devObjPtr,_memPtr,_index,fieldName,SKERNEL_TABLE_FORMAT_IP_MLL_BIER_E)

/**
* @internal snetAasMllTablesFormatInit function
* @endinternal
*
* @brief   init the format of MLL tables.
*
* @param[in] devObjPtr                - pointer to device object.
*/
void snetAasMllTablesFormatInit(
    IN SKERNEL_DEVICE_OBJECT            * devObjPtr
);


#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */



#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif  /* __snetAasMllh */



